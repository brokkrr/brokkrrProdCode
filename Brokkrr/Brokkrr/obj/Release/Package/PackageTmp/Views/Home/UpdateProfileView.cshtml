@model BrokerMVC.Models.UpdateModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Update Profile</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    @using (Html.BeginForm())
    {


        <div class="form-horizontal">
            <h4>Update Profile</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           
            <div class="form-group">
                @Html.Label("Your Name", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.FirstName)
                    @Html.HiddenFor(model => model.FirstName)
                    @Html.DisplayFor(model => model.LastName)
                    @Html.HiddenFor(model => model.LastName)
                </div>
            </div>

         

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="reqField">*</span>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="reqField">*</span>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MobNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="reqField">*</span>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="reqField">*</span>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="reqField">*</span>
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.UserType, new List<SelectListItem>
                     {
                         new SelectListItem() {Text = "Select User type", Value=""},
                        new SelectListItem() {Text = "Broker", Value="Broker"},
                        new SelectListItem() {Text = "User", Value="User"}

                     }, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="reqField">*</span>
                <div class="col-md-8">
                    @Html.PasswordFor(model => model.Password,new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @ViewBag.UserExist
                @ViewBag.validateerror
                @ViewBag.Success
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update Profile" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @*@Html.ActionLink("Back to List", "Index")*@
    </div>
</body>
</html>
